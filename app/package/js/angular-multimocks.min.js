angular.module("scenario",["ngMockE2E","multimocks.responseDelay"]).provider("multimocksData",function(){var a={},b={"Content-type":"application/json"},c="_default";this.setHeaders=function(a){b=a},this.setMockData=function(b){a=b},this.addMockData=function(b,c){a[b]=c},this.setDefaultScenario=function(a){c=a},this.$get=function(){return{getMockData:function(){return a},getDefaultScenario:function(){return c},getHeaders:function(){return b}}}}).factory("multimocks",["$q","$http","$httpBackend","multimocksData","scenarioMocks",function(a,b,c,d,e){var f=function(a,e){var f=d.getHeaders(),g=new RegExp("^"+e.uri+"$");if(e.poll){var h=0,i=void 0!==e.pollCount?e.pollCount:2;c.when(e.httpMethod,g,e.requestData).respond(function(){return i>h?(h++,[204,{},f]):[200,e.response,f]})}if(e.passThrough?c.when(e.httpMethod,g,e.requestData).passThrough():c.when(e.httpMethod,g,e.requestData).respond(e.statusCode,e.response,f),e.callInSetup){var j={method:e.httpMethod,url:e.uri};b(j).success(function(){a.resolve()})}else a.resolve()};return{setup:function(b){var c=a.defer(),d=e.getMocks(b);for(var g in d)f(c,d[g]);return c.promise}}}]).factory("currentScenario",["$window","multimocksData",function(a,b){function c(a){if(-1!==a.indexOf("scenario")){var b=a.slice(1).split("&").map(function(a){return a.split("=")}).filter(function(a){return"scenario"===a[0]});return b[0][1]}return void 0}return{getName:function(){var d=c(a.location.search);return void 0===d?b.getDefaultScenario():d}}}]).factory("scenarioMocks",["$log","multimocksData","currentScenario","multimocksLocation",function(a,b,c,d){function e(a,b){var c=new RegExp(b);return c.test(a)}var f=b.getMockData(),g={getMocks:function(b){return void 0!==f[b]?f[b]:void(b&&a.error("Mocks not found for scenario: "+b))},getMocksForCurrentScenario:function(){return g.getMocks(c.getName())},getDelayForResponse:function(a){var b=d.getQueryStringValuesByKey("global_delay");if(void 0!==b)return parseInt(b[0]);var c=g.getMocksForCurrentScenario();for(var f in c){var h=c[f],i=e(a.config.url,h.uri),j=h.httpMethod===a.config.method;if(j&&i)return h.responseDelay||0}return 0}};return g}]).service("multimocksLocation",["$window",function(a){var b={};return b.getQueryStringValuesByKey=function(b){var c={};return a.location.search.substr(1).split("&").forEach(function(a){var b=a.split("="),d=b[0],e=b[1]&&decodeURIComponent(b[1]);c[d]?c[d].push(e):c[d]=[e]}),c[b]},b}]).run(["multimocks","currentScenario",function(a,b){a.setup(b.getName())}]),angular.module("multimocks.responseDelay",[]).factory("responseDelay",["$q","$timeout","scenarioMocks",function(a,b,c){return{response:function(d){var e=a.defer();return b(function(){e.resolve(d)},c.getDelayForResponse(d)),e.promise}}}]).config(["$httpProvider",function(a){a.interceptors.push("responseDelay")}]);